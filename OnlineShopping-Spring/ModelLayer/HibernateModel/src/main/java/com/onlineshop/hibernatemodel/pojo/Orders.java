package com.onlineshop.hibernatemodel.pojo;
// Generated Apr 27, 2017 8:07:42 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name="orders"
    ,catalog="onlineshopping"
)
public class Orders  implements java.io.Serializable {


     private Integer id;
     private User user;
     private Date date;
     private Integer status;
     private Set orderdetailses = new HashSet(0);

    public Orders() {
    }

	
    public Orders(User user) {
        this.user = user;
    }
    public Orders(User user, Date date, Integer status, Set orderdetailses) {
       this.user = user;
       this.date = date;
       this.status = status;
       this.orderdetailses = orderdetailses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="User_email", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date", length=10)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

    
    @Column(name="status")
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public Set getOrderdetailses() {
        return this.orderdetailses;
    }
    
    public void setOrderdetailses(Set orderdetailses) {
        this.orderdetailses = orderdetailses;
    }




}


